{"version":3,"sources":["components/GetData.js","components/Home.js","components/LoginPage.js","components/LogoutPage.js","components/User.js","components/Dashboard.js","components/ResponseTable.js","App.js","serviceWorker.js","index.js"],"names":["dataGet","string","axios","get","then","res","data","Home","state","surveys","name","user","loading","localStorage","getItem","response","setState","catch","error","console","log","this","style","position","top","left","className","Spinner","animation","variant","length","Jumbotron","marginTop","Card","Body","Title","Row","CardDeck","map","params","key","id","Figure","Image","src","imagePath","Text","description","createdDt","slice","Button","status","to","pathname","surveyId","Component","LoginPage","handleChange","event","username","target","value","handlePassword","password","handleSubmit","preventDefault","post","hasOwnProperty","isLogged","setItem","users","source","display","justifyContent","Form","onSubmit","Control","type","placeholder","onChange","LogoutPage","clear","User","details","details2","loginButtton","props","location","email","phone","colspan","class","website","address","suite","street","city","company","bs","album","sort","a","b","title","localeCompare","photo","width","alt","url","Caption","Dashboard","count","dates","responses","handleWeek","bind","handleMonth","handleDate","handleResponses","surveyCount","date","week","month","chartData","options","xaxis","categories","Object","keys","series","values","responseChartData","bg","text","liveCount","draftCount","responseCount","Header","onClick","ResponseTable","object","push","userId","columns","filterType","responsive","App","loggedNavBar","Navbar","Nav","Link","href","expand","fixed","Brand","Toggle","Collapse","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20d63725.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//Created service for getting Data \r\nexport function dataGet(string) {\r\n       return axios.get(`https://surveyglance.herokuapp.com/api/tache/facade`+string)\r\n           .then(res => res.data)\r\n   }\r\nexport function dataPost(string,data) {\r\n        return axios.post(`https://surveyglance.herokuapp.com/api/tache/facade`+string,data)\r\n            .then(res => res.data)\r\n    }   ","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { dataGet } from \"./GetData\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport class Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      surveys: [],\r\n      name: [],\r\n      user: [],\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\"/survey/surveys/\"+localStorage.getItem('userId'))\r\n      .then(response => {\r\n        this.setState({\r\n          surveys: response,\r\n        });\r\n        this.setState({\r\n          loading:false\r\n        })     \r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n      console.log(this.state.surveys)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n      if (!this.state.loading) {\r\n\r\n        if (this.state.surveys.length === 0) {\r\n          return (\r\n            <div>\r\n              <Jumbotron>\r\n                <p>\r\n                <b>You have not created any survey </b>\r\n                </p>\r\n              </Jumbotron>\r\n              ;\r\n            </div>\r\n          );\r\n        }\r\n\r\n        else{\r\n          return (\r\n            <div style={{ marginTop: \"65px\" }} className=\"container-fluid\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>Total Surveys: {this.state.surveys.length}</Card.Title>\r\n                  <Row>\r\n                  <CardDeck>\r\n                  {this.state.surveys.map(params =>{\r\n                   return(\r\n                   <Card className=\"col-md-4\" key ={params.id}>\r\n                     <Figure>\r\n                       <Figure.Image\r\n                       src={params.imagePath}  \r\n                       >\r\n                       </Figure.Image>\r\n                       </Figure>\r\n                      <Card.Body> \r\n                      <Card.Title>{params.name}</Card.Title>\r\n                      <Card.Text>{params.description}<br/>\r\n                   <label>Created On:</label>{\"   \"}{params.createdDt.slice(0,10)}<br/>\r\n                   <Button>{params.status}</Button><br/>\r\n                   <Link to = {{pathname:'/response',\r\n                   state:{\r\n                    surveyId:params.id\r\n                   }\r\n                  }}>\r\n                  Show Details\r\n                      </Link>\r\n                      </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  )})\r\n                }\r\n                </CardDeck>\r\n                </Row>\r\n                </Card.Body>\r\n                </Card>\r\n                  </div>\r\n                  )\r\n        }\r\n      }\r\n\r\n      else{\r\n        return (\r\n          <div\r\n            style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }}\r\n            className=\"d-flex flex-column align-items-center justify-content-center\"\r\n          >\r\n            <Spinner animation=\"grow\" variant=\"warning\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        ) \r\n      }\r\n             \r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {FaSignInAlt } from 'react-icons/fa';\r\nimport { dataPost } from \"./GetData\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport class LoginPage extends Component {\r\n    \r\n  constructor(){\r\n    super();\r\n     this.state={\r\n       username:\"\",\r\n       password:\"\",\r\n       isLogged:false,\r\n       users:[],\r\n       source:'',\r\n       data:[],\r\n       error:\"\"\r\n     }\r\n  }\r\n\r\n\r\n  handleChange = event => {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n  \r\nhandlePassword = event =>{\r\n    this.setState({password : event.target.value})\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = event =>{\r\n    event.preventDefault();\r\n    const user ={\r\n      username:this.state.username,\r\n      password:this.state.password\r\n    };\r\n    let res ={};\r\n    dataPost('/user/login',user)\r\n    .then(response=>{\r\n      if(response.hasOwnProperty('userName')){\r\n        this.setState({\r\n          isLogged:true\r\n        })\r\n        localStorage.setItem('userId',response.id)\r\n        localStorage.setItem('isLogged',true)\r\n      }\r\n    })\r\n  }\r\n  \r\n   \r\n\r\n   \r\n    \r\n  \r\n  render() {\r\n\r\n  if(this.state.isLogged){\r\n    return(\r\n      <Redirect to ='/home'></Redirect>\r\n    )\r\n  }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"loginParent\">\r\n            <div className=\"col-sm-4\">\r\n            <Card style={{ display:'flex', justifyContent:'center' }}>\r\n                     <Card.Body className=\"p-4\">  \r\n                    <Form  onSubmit ={this.handleSubmit}>\r\n                        <div className=\"\">\r\n                         </div>\r\n                          <h3 className=\"text-center mb-3\">LOGIN</h3>\r\n                            <div className =\"fields\">\r\n                              <p className=\"text-danger\">{this.state.error}</p>\r\n                               <Form.Control  type = \"email \" placeholder = \"Email\" onChange= {this.handleChange}/>\r\n                              <br/>\r\n                                <Form.Control  type = \"password\" placeholder=\"Password\"onChange= {this.handlePassword}/>\r\n                              <br/>\r\n                              <Button variant=\"login_btn\" type = \"submit\" className=\"m-0 btn-block \"><FaSignInAlt/> Login</Button>\r\n                         </div>\r\n                     </Form>\r\n                    </Card.Body>\r\n                    </Card>            \r\n                    </div>\r\n                    </div>\r\n        )\r\n     \r\n  }\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class LogoutPage extends Component {\r\n\r\n   \r\n    componentDidMount(){\r\n        localStorage.clear();\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Redirect to =\"/login\"/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogoutPage\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { FaMusic } from \"react-icons/fa\";\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    var details, details2;\r\n    var loginButtton;\r\n    if (localStorage.getItem(\"isLogged\")) {\r\n      details = (\r\n        <tr>\r\n          <th>\r\n            {\" \"}\r\n            <label>Email</label>\r\n          </th>\r\n          <td>{this.props.location.state.user.email}</td>\r\n        </tr>\r\n      );\r\n      details2 = (\r\n        <tr>\r\n          <th>\r\n            {\" \"}\r\n            <label>Contact No</label>\r\n          </th>\r\n          <td>{this.props.location.state.user.phone}</td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      loginButtton = (\r\n        <tr>\r\n          {\" \"}\r\n          <th colspan=\"4\">\r\n            {\" \"}\r\n            <Link\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { user: this.props.location.state.user }\r\n              }}\r\n            >\r\n              <Button variant=\"login_btn\" className=\"m-0 btn-block \">\r\n                Login to view Details\r\n              </Button>{\" \"}\r\n            </Link>\r\n          </th>{\" \"}\r\n        </tr>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        key={this.props.id}\r\n        className=\"container-fluid\"\r\n        style={{ marginTop: \"65px\" }}\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 pr-md-1 mb-2\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Profile Details</Card.Title>\r\n                <Card.Text>\r\n                  <table className=\"table text-left table-bordered\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <td>{this.props.location.state.user.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Website</th>\r\n                      <td>{this.props.location.state.user.website}</td>\r\n                    </tr>\r\n                    {details}\r\n                    {details2}\r\n                    <tr>\r\n                      <th>Address</th>\r\n                      <td>\r\n                        {this.props.location.state.user.address.suite},\r\n                        {this.props.location.state.user.address.street},\r\n                        {this.props.location.state.user.address.city}\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </Card.Text>\r\n                <Card.Title>Company Details</Card.Title>\r\n                <Card.Text>\r\n                  <table className=\"table text-left table-bordered\">\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <td>{this.props.location.state.user.company.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Business</th>\r\n                      <td>{this.props.location.state.user.company.bs}</td>\r\n                    </tr>\r\n                    {loginButtton}\r\n                  </table>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <div class=\"col-sm-6 pl-md-1 mb-2\">\r\n            <Card className=\" p-2 heightfull\">\r\n              <div className=\"mapParent\">\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        <Card className=\"mb-2\">\r\n          <Card.Body>\r\n            <Card.Title>Albums:</Card.Title>\r\n            <Card.Text>\r\n              {this.props.location.state.user.album\r\n                .sort((a, b) => a.title.localeCompare(b.title))\r\n                .slice(0, 5)\r\n                .map(function(params) {\r\n                  return (\r\n                    <Card className=\"mb-4\" key={params.id}>\r\n                      <Card.Body>\r\n                        <div key={params.id}>\r\n                          <Card.Title>\r\n                            <FaMusic /> {params.title}\r\n                          </Card.Title>\r\n\r\n                          <Card.Text>\r\n                            <div className=\"album_ui\" key={params.id}>\r\n                              {params.photo.slice(0, 2).map(function(params) {\r\n                                return (\r\n                                  <div key={params.id} className=\"album_part\">\r\n                                    <Figure key={params.id} className=\"mb-0\">\r\n                                      <Figure.Image\r\n                                        width={100}\r\n                                        alt=\"album image\"\r\n                                        src={params.url}\r\n                                        className=\"mb-0\"\r\n                                      />\r\n                                      <Figure.Caption>\r\n                                        {params.title}\r\n                                      </Figure.Caption>\r\n                                    </Figure>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          </Card.Text>\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  );\r\n                })}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default User;\r\n","import React,{Component} from 'react';\r\nimport axios from 'axios'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Chart from \"react-apexcharts\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { dataGet } from \"./GetData\";\r\n\r\n\r\n\r\nclass Dashboard extends Component{\r\n\r\n   constructor(){\r\n       super()\r\n       this.state={\r\n         count:[],\r\n         dates:[],\r\n         responses:[]\r\n       }\r\n       this.handleWeek = this.handleWeek.bind(this)\r\n       this.handleMonth = this.handleMonth.bind(this)\r\n       this.handleDate = this.handleDate.bind(this)\r\n       this.handleResponses = this.handleResponses.bind(this)\r\n    }\r\n   \r\n\r\n\r\n\r\n   componentDidMount()\r\n   {\r\n   this.handleDate()\r\n   this.handleResponses()\r\n   }\r\n\r\n    handleDate(){\r\n        dataGet(\"/report/count?format=date&userId=\"+localStorage.getItem(\"userId\"))\r\n        .then(response=>{\r\n            this.setState(\r\n                {\r\n                    count:response,\r\n                    dates:response.surveyCount.date\r\n                }\r\n            )\r\n       })\r\n    }\r\n    \r\n\r\n\r\n    handleWeek(){\r\n        dataGet(\"/report/count?format=week&userId=\"+localStorage.getItem(\"userId\"))\r\n        .then(response=>{\r\n            this.setState(\r\n                {\r\n                    dates:response.surveyCount.week\r\n                }\r\n            )\r\n       })\r\n\r\n    }\r\n\r\n    handleMonth(){\r\n        dataGet(\"/report/count?format=month&userId=\"+localStorage.getItem(\"userId\"))\r\n        .then(response=>{\r\n            this.setState(\r\n                {\r\n                    dates:response.surveyCount.month\r\n                }\r\n            )\r\n       })\r\n\r\n    }\r\n    \r\n    handleResponses(){\r\n        dataGet(\"/report/count/userId?userId=\"+localStorage.getItem(\"userId\"))\r\n        .then(response=>{\r\n            console.log(response)\r\n            this.setState(\r\n                {\r\n                    responses:response\r\n                }\r\n            )\r\n            console.log(this.state.responses)\r\n            console.log(response.data)\r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        var dates = Object.keys(this.state.dates)\r\n        var values = Object.values(this.state.dates)\r\n\r\n        var responseSurvey = Object.keys(this.state.responses)\r\n        var responseValue = Object.values(this.state.responses)\r\n\r\n        var chartData={\r\n            options: {\r\n                xaxis: {\r\n                  categories: dates\r\n                }\r\n              },\r\n              series: [\r\n                {\r\n                  name: \"count\",\r\n                  data: values\r\n                }\r\n              ]\r\n            }\r\n\r\n            var responseChartData={\r\n                options: {\r\n                    xaxis: {\r\n                      categories: responseSurvey\r\n                    }\r\n                  },\r\n                  series: [\r\n                    {\r\n                      name: \"count\",\r\n                      data: responseValue\r\n                    }\r\n                  ]\r\n                }\r\n\r\n        return(\r\n            <div >\r\n            <div >\r\n            <Row>\r\n            <div className =\"col-md-3\">\r\n            <Card  bg =\"success\" text=\"white\">\r\n                 <Card.Body>\r\n                 <Card.Title>Live</Card.Title>\r\n                 <Card.Text>{this.state.count.liveCount}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className =\"col-md-3\">\r\n            <Card bg = \"danger \"text=\"white\">\r\n                <Card.Body>\r\n                <Card.Title>Draft </Card.Title>\r\n                <Card.Text text=\"white\">{this.state.count.draftCount}</Card.Text>    \r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className =\"col-md-3\">\r\n            <Card bg =\"primary\" text=\"white\">\r\n                <Card.Body>\r\n                <Card.Title>Total Responses</Card.Title>\r\n                <Card.Text>{this.state.count.responseCount}</Card.Text>    \r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className =\"col-md-3\">\r\n            <Card bg =\"secondary\" text=\"white\">\r\n                <Card.Body>\r\n                <Card.Title>Total Surveys</Card.Title>\r\n                <Card.Text>{this.state.count.liveCount+this.state.count.draftCount}</Card.Text>    \r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Row> \r\n            <section>  \r\n            <Row>   \r\n            <Card className =\"col-md-6\">\r\n             <Card.Header className=\"text-right\">\r\n                 <Button variant=\"light\"  onClick ={this.handleDate}>Day</Button>\r\n                 <Button variant=\"light\"  onClick={this.handleWeek}>Week</Button>\r\n                 <Button variant=\"light\"  onClick={this.handleMonth}>Month</Button>\r\n             </Card.Header>\r\n             <Card.Body>\r\n             <Chart  \r\n              options={chartData.options}\r\n              series={chartData.series}\r\n              type=\"line\"\r\n             />   \r\n             </Card.Body>\r\n             <center><b>No of surveys created</b></center>\r\n            </Card>\r\n            <Card className =\"col-md-6\">\r\n             <Card.Header className=\"text-right\">\r\n             <p></p>\r\n             </Card.Header>\r\n             <Card.Body>\r\n             <Chart  \r\n              options={responseChartData.options}\r\n              series={responseChartData.series}\r\n              type=\"line\"\r\n             />   \r\n             <center><b>No of responses recorded</b></center>\r\n             </Card.Body>\r\n            </Card>\r\n            </Row>  \r\n            </section>   \r\n            </div>\r\n            </div>\r\n        )\r\n\r\n        \r\n    }\r\n}\r\nexport default Dashboard","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {dataGet} from \"./GetData\";\r\n\r\n\r\nexport class ResponseTable extends Component{\r\n\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            responses:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      console.log(this.props.location.state)\r\n      dataGet('/response/survey/'+this.props.location.state.surveyId)\r\n      .then(res =>{\r\n        this.setState({\r\n          responses:res\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n\r\n    const data =[]\r\n\r\n\r\n     this.state.responses.map(res=>{\r\n        const object =[]\r\n        object.push(res.userId,res.data.length,res.createdDt.slice(0,10),res.status)\r\n        data.push(object)\r\n     })\r\n\r\n      \r\n      const columns = [\"UserId\",\"Questions Answered\",\"Submit Date\",\"Status\"]\r\n       \r\n       \r\n          \r\n       const options = {\r\n        filterType: \"dropdown\",\r\n        responsive: \"scroll\"\r\n      };\r\n  \r\n      return (\r\n        <MUIDataTable style={{marginTop:\"10%\"}}\r\n          title={\"Responses\"}\r\n          data={data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n      );\r\n    }\r\n}\r\n\r\nexport default ResponseTable","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./css/navbar.css\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport Home from \"./components/Home\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport LogoutPage from \"./components/LogoutPage\";\r\nimport User from \"./components/User\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport { FaPowerOff, FaSignInAlt} from \"react-icons/fa\";\r\nimport { ResponseTable } from \"./components/ResponseTable\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var loggedNavBar;\r\n    if (localStorage.getItem(\"userId\")) {\r\n      loggedNavBar = (\r\n        <Navbar.Text className=\"d-flex p-md-0\">\r\n          {/* <a href=\"#login\" className=\"profileBtn\">\r\n            <FaUser /> {localStorage.getItem(\"username\")}\r\n          </a> */}\r\n          <Nav.Link\r\n            href=\"/logout\"\r\n            className=\"loginBtn\"\r\n            location={this.props.location}\r\n          >\r\n            {\" \"}\r\n            <FaPowerOff /> Logout\r\n          </Nav.Link>\r\n        </Navbar.Text>\r\n      );\r\n    } else {\r\n      loggedNavBar = (\r\n        <Nav.Link\r\n          href=\"/login\"\r\n          className=\"loginBtn\"\r\n          location={this.props.location}\r\n        >\r\n          <FaSignInAlt /> Login\r\n        </Nav.Link>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n      >\r\n        <div>\r\n          <Navbar\r\n            expand=\"lg\"\r\n            variant=\"dark\"\r\n            bg=\"dark\"\r\n            fixed=\"top\"\r\n            className=\"menubar pt-0 pb-0 pr-0\"\r\n          >\r\n            <Navbar.Brand href=\"/home\">SURVEYGLANCE</Navbar.Brand>\r\n            <br />\r\n\r\n            <Navbar.Toggle />\r\n\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/home\"> Home </Nav.Link>\r\n                <Nav.Link href=\"/dashboard\"> Dashboard</Nav.Link>\r\n              </Nav>\r\n\r\n              <Nav className=\"mr-sm-0 login_part\">{loggedNavBar}</Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n\r\n          <Route exact path=\"/login\" component={LoginPage} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route exact path=\"/logout\" component={LogoutPage} />\r\n          <Route exact path=\"/user\" component={User} />\r\n          <Route exact path =\"/response\" component={ResponseTable}/>\r\n          <Route exact path=\"/\" component={LoginPage} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\n\r\nReactDOM.render(<App  />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}